name: Deploy Beta Environment

on:
  push:
    branches:
      - beta
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 1

jobs:
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true

  validate:
    name: Validate Deployment
    runs-on: ubuntu-latest
    needs: security-check
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Prisma no longer needed - using Firestore

      - name: Run linting
        run: npm run lint:check

      - name: Run type checking
        run: npm run type-check

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Create test environment file
        run: |
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
          echo "NEXTAUTH_SECRET=test-secret-for-cd" >> .env.local
          echo "FIREBASE_PROJECT_ID=pixcarti" >> .env.local

      - name: Run tests
        run: npm run test

  build-and-deploy:
    name: Build and Deploy to Beta
    runs-on: ubuntu-latest
    needs: validate
    environment: 
      name: beta
      url: ${{ steps.deploy.outputs.details_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file
        run: |
          echo "NEXTAUTH_URL=${{ vars.NEXTAUTH_URL_BETA || secrets.NEXTAUTH_URL_BETA }}" >> .env.local
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.local
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID_BETA || secrets.GOOGLE_CLIENT_ID }}" >> .env.local
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET_BETA || secrets.GOOGLE_CLIENT_SECRET }}" >> .env.local
          echo "FACEBOOK_CLIENT_ID=${{ secrets.FACEBOOK_CLIENT_ID_BETA || secrets.FACEBOOK_CLIENT_ID }}" >> .env.local
          echo "FACEBOOK_CLIENT_SECRET=${{ secrets.FACEBOOK_CLIENT_SECRET_BETA || secrets.FACEBOOK_CLIENT_SECRET }}" >> .env.local
          echo "APPLE_ID=${{ secrets.APPLE_ID_BETA || secrets.APPLE_ID }}" >> .env.local
          echo "APPLE_SECRET=${{ secrets.APPLE_SECRET_BETA || secrets.APPLE_SECRET }}" >> .env.local
          echo "APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}" >> .env.local
          echo "APPLE_KEY_ID=${{ secrets.APPLE_KEY_ID }}" >> .env.local
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.local
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env.local
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env.local
          echo "A1111_BASE_URL=${{ secrets.A1111_BASE_URL_BETA || secrets.A1111_BASE_URL }}" >> .env.local

      # Prisma no longer needed - using Firestore

      - name: Build application
        run: npm run build:beta
        env:
          NODE_ENV: production

      - name: Deploy to Firebase Hosting Beta
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          target: beta
          channelId: live

      - name: Update deployment status
        if: always()
        run: |
          if [ "${{ steps.deploy.outcome }}" = "success" ]; then
            echo "✅ Beta deployment successful"
            echo "URL: ${{ steps.deploy.outputs.details_url }}"
          else
            echo "❌ Beta deployment failed"
            exit 1
          fi

  post-deploy-tests:
    name: Post-Deployment Tests
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run smoke tests against beta environment
        run: npm run test -- --grep="@smoke"
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.build-and-deploy.outputs.details_url }}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: post-deploy-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7